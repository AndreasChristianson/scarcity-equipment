service: scarcity-equipment

# frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  # - serverless-dynamodb-local
  # - serverless-offline
  # - serverless-bundle
  - serverless-domain-manager

package:
  individually: true

custom:
  customDomain:
    endpointType: regional
    domainName: api.${opt:stage, self:provider.stage}.scarcity.pessimistic-it.com
    basePath: equipment
# custom:
#   dynamodb:
#     start:
#       port: 8000
#       inMemory: true
#       migrate: true
#     migration:
#       dir: offline/migrations

provider:
  name: aws
  runtime: nodejs12.x
  endpointType: regional
  # environment:
  #   DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  # iamRoleStatements:
  #   - Effect: Allow
  #     Action:
  #       - dynamodb:Query
  #       - dynamodb:Scan
  #       - dynamodb:GetItem
  #       - dynamodb:PutItem
  #       - dynamodb:UpdateItem
  #       - dynamodb:DeleteItem
  #     Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  weapon-post:
    handler: weapon/post.post
    events:
      - http:
          path: weapon
          method: post
          cors: true

  # list:
  #   handler: todos/list.list
  #   events:
  #     - http:
  #         path: todos
  #         method: get
  #         cors: true

  # get:
  #   handler: todos/get.get
  #   events:
  #     - http:
  #         path: todos/{id}
  #         method: get
  #         cors: true

  # update:
  #   handler: todos/update.update
  #   events:
  #     - http:
  #         path: todos/{id}
  #         method: put
  #         cors: true

  # delete:
  #   handler: todos/delete.delete
  #   events:
  #     - http:
  #         path: todos/{id}
  #         method: delete
  #         cors: true

# resources:
#   Resources:
#     TodosDynamoDbTable:
#       Type: 'AWS::DynamoDB::Table'
#       DeletionPolicy: Retain
#       Properties:
#         AttributeDefinitions:
#           -
#             AttributeName: id
#             AttributeType: S
#         KeySchema:
#           -
#             AttributeName: id
#             KeyType: HASH
#         BillingMode: PAY_PER_REQUEST
#         TableName: ${self:provider.environment.DYNAMODB_TABLE}
